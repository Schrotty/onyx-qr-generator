image: thlmylab/swakkd:1.22

stages:                      # Stages for jobs in their order of execution
  - check
  - component
  - build
  - deploy

variables:
  DEPLOY_INGRESS: "true"     # deploys Ingress for project if set to true
  DEPLOY_REDIS: "true"       # deploys Redis if set to true
  DEPLOY_MINIO: "true"       # deploys minio if set to true
  DEPLOY_MONGO: "true"       # deploys Mongo if set to true
  DEPLOY_RABBITMQ: "true"    # deploys RabbitMQ if set to true

kubernetes:
  stage: check
  script:
    - NS=$(cat $KUBECONFIG | yq e '.contexts[0].context.namespace' - -e) || true
    - NS=${NS:='default'}
    - kubectl get nodes
    - kubectl get pods
    - echo "Great, kubectl seems to work with namespace $NS"

registry:
  stage: check
  script:
    - cd nginx
    - img login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - img build -t $CI_REGISTRY_IMAGE/nginx:latest .
    - img push $CI_REGISTRY_IMAGE/nginx:latest
    - echo "Great, image build and registry push seem to work for namespace $NS"

nodejs-express:
  stage: build
  script:
    - cd nodejs-express
    - img login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - img build -t $CI_REGISTRY_IMAGE/nodejs-express:latest .
    - img push $CI_REGISTRY_IMAGE/nodejs-express:latest

nodejs-express-svc:
  stage: deploy
  script:
    - cd nodejs-express
    - NS=$(cat $KUBECONFIG | yq e '.contexts[0].context.namespace' - -e) || true
    - NS=${NS:='default'}
    - echo "Deploying to Kubernetes"
    - kubectl delete secret gitlab-registry-credentials -n $NS || true
    - kubectl create secret docker-registry gitlab-registry-credentials --docker-server=$CI_REGISTRY --docker-username=image-registry --docker-password=$CI_REGISTRY_TOKEN -n $NS
    - mo deploy/dep.yaml | kubectl delete -n $NS -f - || true
    - mo deploy/dep.yaml | kubectl apply -n $NS -f - 
    - mo deploy/svc.yaml | kubectl apply -n $NS -f -

nginx-svc:
  stage: deploy
  script:
    - cd nginx
    - NS=$(cat $KUBECONFIG | yq e '.contexts[0].context.namespace' - -e) || true
    - NS=${NS:='default'}
    - echo "Deploying to Kubernetes"
    - kubectl delete secret gitlab-registry-credentials -n $NS || true
    - kubectl create secret docker-registry gitlab-registry-credentials --docker-server=$CI_REGISTRY --docker-username=image-registry --docker-password=$CI_REGISTRY_TOKEN -n $NS
    - mo deploy/dep.yaml | kubectl delete -n $NS -f - || true
    - mo deploy/dep.yaml | kubectl apply -n $NS -f - 
    - mo deploy/svc.yaml | kubectl apply -n $NS -f -

ingress:
  stage: deploy
  only:
    variables:
      - $DEPLOY_INGRESS == "true"
  script:
    - cd ingress
    - NS=$(cat $KUBECONFIG | yq e '.contexts[0].context.namespace' - -e) || true
    - NS=${NS:='default'}
    - mo ing.yaml | kubectl apply -n $NS -f -

redis:
  stage: component
  only:
    variables:
      - $DEPLOY_REDIS == "true"
  script:
    - cd redis
    - NS=$(cat $KUBECONFIG | yq e '.contexts[0].context.namespace' - -e) || true
    - NS=${NS:='default'}
    - echo "Deploying Redis database component"
    - kubectl apply -n $NS -f deploy/pvc.yaml 
    - kubectl apply -n $NS -f deploy/ 

mongo:
  stage: component
  only:
    variables:
      - $DEPLOY_MONGO == "true"
  script:
    - cd mongo
    - NS=$(cat $KUBECONFIG | yq e '.contexts[0].context.namespace' - -e) || true
    - NS=${NS:='default'}
    - echo "Deploying Mongo database component"
    - kubectl apply -n $NS -f deploy/pvc.yaml 
    - kubectl apply -n $NS -f deploy/

minio:
  stage: component
  only:
    variables:
      - $DEPLOY_MINIO == "true"
  script:
    - cd minio
    - NS=$(cat $KUBECONFIG | yq e '.contexts[0].context.namespace' - -e) || true
    - NS=${NS:='default'}
    - echo "Deploying minio object storage component"
    - kubectl apply -n $NS -f deploy/pvc.yaml 
    - kubectl apply -n $NS -f deploy/
  
rabbitmq:
  stage: component
  only:
    variables:
      - $DEPLOY_RABBITMQ == "true"
  script:
    - cd rabbitmq
    - NS=$(cat $KUBECONFIG | yq e '.contexts[0].context.namespace' - -e) || true
    - NS=${NS:='default'}
    - echo "Deploying RabbitMQ message broker component"
    - kubectl apply -n $NS -f deploy/pvc.yaml 
    - kubectl apply -n $NS -f deploy/
